Mongodb in crud operation.....



Mcontroller:-Mdbcontroller


package com.example.mongo.Mcontroller;


@RestController
public class Mdbcontroller {
	
	@Autowired
	public Mdbrepo obj;
	
	@PostMapping("/post")
	public String getPost(@RequestBody Mdbdata m) {
		obj.save(m);
		return "inserted";
		
	}
	
	@GetMapping("/getdb")
	public List<Mdbdata> getMapu(){
		return obj.findAll();
		
	}
	
	@PutMapping("/update/{id}")
	 public String getput(@PathVariable int id , @RequestBody Mdbdata d){
		 
			 
			Mdbdata u=obj.findById(id).orElse(null);
			 if (u!=null)
			 {
				 u.setEname(d.getEname());
				 obj.save(u);
				 return "updated";
						 
			 }
			 else
			 {
				 return "id not found";
			 }
			 }
	
	@DeleteMapping("/delete/{id}")
	public String getdelete(@PathVariable int id) {
		if (obj.existsById(id)) {
			obj.deleteById(id);
			return "deleted";
			
			
		}else {
			return ("id "+id+"not found");
		}
	}
	}


Mdata:-Mdbdata

package com.example.mongo.Mdata;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@AllArgsConstructor
@NoArgsConstructor
@Document(collection="employe")
public class Mdbdata {
	
	@Id
	private int eid;
	public String getEname() {
		return ename;
	}

	public void setEname(String ename) {
		this.ename = ename;
	}

	public int getEsalary() {
		return esalary;
	}

	public void setEsalary(int esalary) {
		this.esalary = esalary;
	}

	public void setEid(int eid) {
		this.eid = eid;
	}

	private String ename;
	private int esalary;
	
	public int getEid() {
		return eid;
		
	}
	

}



Mrepo:-Mdbrepo
package com.example.mongo.Mrepo;

import org.springframework.data.mongodb.repository.MongoRepository;
import org.springframework.stereotype.Repository;

import com.example.mongo.Mdata.Mdbdata;

@Repository
public interface Mdbrepo extends MongoRepository <Mdbdata,Integer> {

}


APPLICATION PROPERTIES...
1.spring.application.name=database
2.spring.data.mongodb.host=localhost
3.spring.data.mongodb.port=27017
4.spring.data.mongodb.database=company
5.server.port=8081
	
	

